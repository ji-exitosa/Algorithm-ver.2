	┌───────┬───────────┬───────────────────────────┐
	│백준		│12869번		│뮤탈리스크					│
	└───────┴───────────┴───────────────────────────┘
	┌───────────────┐
	│전반적인 아이디어	│
	└───────────────┘
	한번에 9,3,1씩 최대 13까지 데미지 입힐 수 있음
	파괴해야하는 건물의 남은 체력의 합이 X라고 치면,
	최적화 된 경우에는 X/13 번으로 끝낼 수 있고, 안될 경우 횟수 추가됨
	일단 최소 X/13!
	뺄 때는 큰값에서 9 빼주고 작은값에서 3이랑 1을 빼주는게.. 흠..
	어떻게 빼줘야되지? 한번 뺄때마다 sort를 다시하면 비효율적일 것 같기도 하고..

	상식적으로 생각했을때
	딱 맞게 떨어질 경우에는 남는게 최소한이어야됨.
	합분해?
	9,3,1로 합분해 
	9,3,1 개수가 똑같으면 가능, 예외있긴함
	
	┌───────┐
	│예제 1	│
	└───────┘
	3
	12 10 4
	총 26
	최적화된 경우 2번으로 가능
	
	시뮬1) 
	12 10 4
1회	-9 -3 -1
	--------
	 3  7  3
sort 7  3  3
2회     -9 -3 -1
     -------
     0  0  2
3회	(효율적이지 않았다는 의미)

	시뮬2)
	12 10 4
1회	-9 -1 -3
	--------
	 3  9  1
2회 	 -3 -9 -1
	--------
	0	0	0
	
	이렇게 하려면 
	12를 합분해 했을 때 9+3
	10을 합분해 했을 때 9+1
	4를 합분해 했을 때 3+1
	이므로 9가 2개 3이 2개 1이 2개이다. 이런 결론이 나와야되고..
	
	또 이게 만약에
	18 4 4 이런식이었다면
	18을 합분해 했을 때 9+9
	4를 합분해 했을 때 3+1
	4를 합분해 했을 때 3+1
	이므로 9가 2개 3이 2개 1이 2개이더라도 음.. 되네?
	
	아! 그럼 
	21 1 4 이런식이었다면
	21을 합분해 했을 때 9+9+3
	4를 합분해 했을 때 3+1
	1를 합분해 했을 때 1
	이므로 똑같이 9가 2개 3이 2개 1이 2개이지만! 1이 먼저 깨지고나면
	남은 SCV 개수가 2개이므로 최대로 데미지 입힐 수 있는게 9+3으로 줄어듬... 
	시뮬 해보자면
	
	21 1 4
	-9 -1 -3
	--------
	12 0 1
	-9 0 -3
	-------
	3 0 0
	-9
	
	이렇게 3번해야된다는것.,,.
	
	아 그러면 합분해 했을 때 갯수가 같은지 보고
	그 최대 갯수가 결국 총 공격수겠네?
	 
	┌───────┐
	│예제 2	│
	└───────┘
	3
	54 18 6
	총 78
	최적화 된 경우 6번
	
	시뮬)
	54 합분해하면 9+9+9+9+9+9
	18 합분해하면 9+9
	6 합분해하면 3+3
	
	흠.. 이렇게 하면 또 이상해지니까
	그럼 최적화 된 경우 6번안에 끝낼 수 있다는 걸 알수있으니까 최적화되어있다는 가정하에
	9 갯수를 제한을 둬볼까
	
	54 합분해하면 9+9+9+9+9+9 (6개 나옴)
	18 합분해하면 3+3+3+3+3+3 (3과 1으로만 합분해 --> 3도 6개 나옴)
	6 합분해하면 1+1+1+1+1+1 (1으로만 합분해 --> 1도 6개 나옴)
	총 6개씩이고 갯수가 다 동일하니까 동시에 끝남...
	
	
	┌───────┐
	│예제 3	│
	└───────┘
	1
	60
	총 60
	최적화 불가능( 1개면 튕기는거 맞을수가 없으니까...)
	9씩 하면 60/9해서 올림 
	--> 7
	
	시뮬) 
	60을 합분해하면 9+9+9+9+9+9.... 7번
	
	남아있는 scv 갯수에 따라서 합분해를 어떻게 할지 정해야되네
	scv가 1개 남았을때는 9로만 합분해하고 9보다 작은 나머지 0개~1개 나오면 끝
	scv가 2개 남았을 때는 9랑 3으로 합분해 
	scv가 3개 남았을 때는 9,3,1로 합분해
	
	┌───────┐
	│예제 4	│
	└───────┘
	3
	1 1 1
	총 3
	최적화 된 경우 1번
	
	1을 합분해하면 1 (최적화 된 경우 최대 1개라했으니까 1은 한번 사용한걸로 치고 3,9 사용하면 됨)
	1을 합분해하면 1이지만 1보다 큰 3 사용 가능 (3도 한번 소진해서 9만 남음)
	1을 합분해하면 1이지만 1보다 큰 9 사용 가능 (9도 한번 소진해서 다 사용)
	
	┌───────┐
	│예제 5	│
	└───────┘
	2
	60 40
	총 100
	최적화 된 경우에는 100/12 = 올림해서 9이므로 최소 9번
	(2개남았으므로 9랑 3만 쓰면됨, 1은 버리고)
	
	2개인 경우 합분해는 10과 3으로만 한다
	최적화 된 경우 총 9번이라했으니까 9번 맞춰서 합분해를 해보면?!
	60 10+10+10+10+10+3+3+3+3 했는데 6번밖에 안되므로 9번이 될 수 있게 합분해 변경
	40 10+10+10+10
	
	┌───────────────┐
	│구상끝에 내린 결론	│
	└───────────────┘
	1. 이론상 가능한 최소 공격 횟수를 계산 
	1-1 공격 가능한 SCV가 3개 이상일 경우 (남은 체력의 합 / 13 계산해서 올림한 값)
	1-2 공격 가능한 SCV가 2개인 경우 (남은 체력의 합 / 12 계산해서 올림한 값)
	1-3 공격 가능한 SCV가 1개인 경우 (남은 체력의 합 / 9 계산해서 올림한 값)
	2. 예외 찾기
	2-1. 공격하다가 공격 가능한 SCV 갯수가 줄어든 경우
		= 합분해를 했는데 공격 횟수가 고르지 않게 나온 경우(먼저 터지는게 생긴다는 뜻임)
	 